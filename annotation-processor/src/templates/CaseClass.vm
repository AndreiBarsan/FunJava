package $package;

import java.util.*;

#(set $baseClass = "${parentName}Adt")

#if($typeParamDeclaration.length() > 0)
	#(set $tpd = "<${typeParamDeclaration}>")
	#(set $tpu = "<${typeParamUsage}>")
	#(set $tpuComma = "${typeParamUsage}, ")
#else
	#(set $tpd = "")
	#(set $tpu = "")
	#(set $tpuComma = "")
#end

public class $name$tpd extends $baseClass$tpu {
	
#foreach($field in $fields) 
	private $field.asType().toString() $field.getSimpleName().toString();
#end

	public $name(
		#(set $first = true)
		#foreach($field in $fields)
			#if($first == true)
				#(set $first = false)
			#else
				, 
			#end 
			$field.asType().toString() $field.getSimpleName().toString()
		#end
		)
		
	#foreach($field in $fields) 
		public $field.asType().toString() get$StringUtil.cfirst($field.getSimpleName().toString())() {
			return $field.getSimpleName().toString();
		}
	#end
	
	#foreach($field in $fields) 
		public void set$StringUtil.cfirst($field.getSimpleName().toString())($field.asType().toString() $field.getSimpleName().toString()) {
			this.$field.getSimpleName().toString() = $field.getSimpleName().toString();
		}
	#end
	
	public <_b> _b welcome(${parentName}Visitor<${tpuComma}_b> visitor) {
		return visitor.visit(this);
	}
	
	public String toString() {
		return "$name(" 
		#set($first = true)
		#foreach($field in $fields) {
		#if($first == true) 
			#set($first = false)
		#else
			+ ", "
		#end
			+ $field.getSimpleName().toString() 
		}
		+ ")";
	}
	
	public boolean equals(Object other) {
		return false;
	}
	
	public Iterator<Object> iterator() {
		List<Object> res = new ArrayList<Object>();
	#foreach($field in $fields)
		res.add($field.getSimpleName().toString());
	#end
		return res.iterator();	
	}
}